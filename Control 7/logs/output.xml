<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.12.0 on darwin)" generated="20231123 05:28:06.559" rpa="false" schemaversion="4">
<suite id="s1" name="Control 7" source="/Users/schuiko/Robot_tests/Control 7/Control_7.robot">
<test id="s1-t1" name="First" line="7">
<kw name="Create File" library="OperatingSystem">
<arg>~/hello.py</arg>
<arg>print("Good evening ")</arg>
<doc>Creates a file with the given content and encoding.</doc>
<msg timestamp="20231123 05:28:06.591" level="INFO" html="true">Created file '&lt;a href="file:///Users/schuiko/hello.py"&gt;/Users/schuiko/hello.py&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20231123 05:28:06.590" endtime="20231123 05:28:06.591"/>
</kw>
<kw name="Run" library="OperatingSystem">
<arg>chmod 755 ~/hello.py</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20231123 05:28:06.593" level="INFO">Running command 'chmod 755 ~/hello.py 2&gt;&amp;1'.</msg>
<status status="PASS" starttime="20231123 05:28:06.591" endtime="20231123 05:28:06.604"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>python3 ~/hello.py</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231123 05:28:06.606" level="INFO">Running command 'python3 ~/hello.py 2&gt;&amp;1'.</msg>
<msg timestamp="20231123 05:28:06.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20231123 05:28:06.634" level="INFO">${output} = Good evening </msg>
<status status="PASS" starttime="20231123 05:28:06.604" endtime="20231123 05:28:06.634"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${rc}</arg>
<arg>${0}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231123 05:28:06.635" endtime="20231123 05:28:06.635"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>python3 ~/hello.py</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231123 05:28:06.637" level="INFO">Running command 'python3 ~/hello.py 2&gt;&amp;1'.</msg>
<msg timestamp="20231123 05:28:06.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20231123 05:28:06.666" level="INFO">${output} = Good evening </msg>
<status status="PASS" starttime="20231123 05:28:06.636" endtime="20231123 05:28:06.666"/>
</kw>
<kw name="Append To File" library="OperatingSystem">
<arg>~/output.txt</arg>
<arg>${output}</arg>
<doc>Appends the given content to the specified file.</doc>
<msg timestamp="20231123 05:28:06.666" level="INFO" html="true">Appended to file '&lt;a href="file:///Users/schuiko/output.txt"&gt;/Users/schuiko/output.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20231123 05:28:06.666" endtime="20231123 05:28:06.666"/>
</kw>
<kw name="Grep File" library="OperatingSystem">
<var>${error}</var>
<arg>~/output.txt</arg>
<arg>ERROR</arg>
<doc>Returns the lines of the specified file that match the ``pattern``.</doc>
<msg timestamp="20231123 05:28:06.667" level="INFO" html="true">Reading file '&lt;a href="file:///Users/schuiko/output.txt"&gt;/Users/schuiko/output.txt&lt;/a&gt;'.</msg>
<msg timestamp="20231123 05:28:06.667" level="INFO">0 out of 1 lines matched</msg>
<msg timestamp="20231123 05:28:06.667" level="INFO">${error} = </msg>
<status status="PASS" starttime="20231123 05:28:06.667" endtime="20231123 05:28:06.667"/>
</kw>
<kw name="Should Be Empty" library="BuiltIn">
<arg>${error}</arg>
<doc>Verifies that the given item is empty.</doc>
<msg timestamp="20231123 05:28:06.667" level="INFO">Length is 0</msg>
<status status="PASS" starttime="20231123 05:28:06.667" endtime="20231123 05:28:06.667"/>
</kw>
<kw name="Copy File" library="OperatingSystem">
<arg>~/output.txt</arg>
<arg>/tmp/output.txt</arg>
<doc>Copies the source file into the destination.</doc>
<msg timestamp="20231123 05:28:06.669" level="INFO" html="true">Copied file from '&lt;a href="file:///Users/schuiko/output.txt"&gt;/Users/schuiko/output.txt&lt;/a&gt;' to '&lt;a href="file:///tmp/output.txt"&gt;/tmp/output.txt&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20231123 05:28:06.668" endtime="20231123 05:28:06.669"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>/tmp/output.txt</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20231123 05:28:06.669" level="INFO" html="true">File '&lt;a href="file:///tmp/output.txt"&gt;/tmp/output.txt&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20231123 05:28:06.669" endtime="20231123 05:28:06.669"/>
</kw>
<kw name="Create Directory" library="OperatingSystem">
<arg>~/src</arg>
<doc>Creates the specified directory.</doc>
<msg timestamp="20231123 05:28:06.670" level="INFO" html="true">Created directory '&lt;a href="file:///Users/schuiko/src"&gt;/Users/schuiko/src&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20231123 05:28:06.670" endtime="20231123 05:28:06.670"/>
</kw>
<kw name="Directory Should Exist" library="OperatingSystem">
<arg>~/src</arg>
<doc>Fails unless the given path points to an existing directory.</doc>
<msg timestamp="20231123 05:28:06.670" level="INFO" html="true">Directory '&lt;a href="file:///Users/schuiko/src"&gt;/Users/schuiko/src&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20231123 05:28:06.670" endtime="20231123 05:28:06.670"/>
</kw>
<kw name="Move File" library="OperatingSystem">
<arg>~/hello.py</arg>
<arg>~/src</arg>
<doc>Moves the source file into the destination.</doc>
<msg timestamp="20231123 05:28:06.671" level="INFO" html="true">Moved file from '&lt;a href="file:///Users/schuiko/hello.py"&gt;/Users/schuiko/hello.py&lt;/a&gt;' to '&lt;a href="file:///Users/schuiko/src/hello.py"&gt;/Users/schuiko/src/hello.py&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20231123 05:28:06.670" endtime="20231123 05:28:06.671"/>
</kw>
<kw name="Run" library="OperatingSystem">
<var>${dir_list}</var>
<arg>ls ~/src</arg>
<doc>Runs the given command in the system and returns the output.</doc>
<msg timestamp="20231123 05:28:06.673" level="INFO">Running command 'ls ~/src 2&gt;&amp;1'.</msg>
<msg timestamp="20231123 05:28:06.684" level="INFO">${dir_list} = hello.py</msg>
<status status="PASS" starttime="20231123 05:28:06.671" endtime="20231123 05:28:06.684"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${dir_list}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20231123 05:28:06.685" endtime="20231123 05:28:06.685"/>
</kw>
<status status="PASS" starttime="20231123 05:28:06.590" endtime="20231123 05:28:06.685"/>
</test>
<test id="s1-t2" name="Third" line="24">
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>cd /tmp</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231123 05:28:06.688" level="INFO">Running command 'cd /tmp 2&gt;&amp;1'.</msg>
<msg timestamp="20231123 05:28:06.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20231123 05:28:06.693" level="INFO">${output} = </msg>
<status status="PASS" starttime="20231123 05:28:06.686" endtime="20231123 05:28:06.693"/>
</kw>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc2}</var>
<var>${stdout2}</var>
<arg>ls</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20231123 05:28:06.696" level="INFO">Running command 'ls 2&gt;&amp;1'.</msg>
<msg timestamp="20231123 05:28:06.704" level="INFO">${rc2} = 0</msg>
<msg timestamp="20231123 05:28:06.704" level="INFO">${stdout2} = Desktop
Documents
Downloads
Git_project
Key_pub_new.txt
Library
Movies
Music
Pictures
Public
Robot_tests
eclipse
eclipse-workspace_oldest
log.html
output.txt
output.xml
red_workaround
report.html
src</msg>
<status status="PASS" starttime="20231123 05:28:06.694" endtime="20231123 05:28:06.704"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${stdout2}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20231123 05:28:06.705" endtime="20231123 05:28:06.705"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20231123 05:28:06.705" endtime="20231123 05:28:06.706"/>
</kw>
<status status="PASS" starttime="20231123 05:28:06.685" endtime="20231123 05:28:06.706"/>
</test>
<test id="s1-t3" name="Second" line="31">
<kw name="Run Process" library="Process">
<var>${result}</var>
<arg>grep</arg>
<arg>Level: error</arg>
<arg>/var/log/system.log</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20231123 05:28:06.707" level="INFO">Starting process:
grep "Level: error" /var/log/system.log</msg>
<msg timestamp="20231123 05:28:06.711" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20231123 05:28:06.751" level="INFO">Process completed.</msg>
<msg timestamp="20231123 05:28:06.751" level="INFO">${result} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20231123 05:28:06.707" endtime="20231123 05:28:06.751"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result.rc}</arg>
<arg>${0}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20231123 05:28:06.752" endtime="20231123 05:28:06.752"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${result.stdout}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20231123 05:28:06.753" level="INFO">Length is 8504</msg>
<status status="PASS" starttime="20231123 05:28:06.753" endtime="20231123 05:28:06.753"/>
</kw>
<kw name="Start Process" library="Process">
<var>${process}</var>
<arg>cat</arg>
<arg>/var/log/system.log</arg>
<arg>alias=cat</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20231123 05:28:06.753" level="INFO">Starting process:
cat /var/log/system.log</msg>
<msg timestamp="20231123 05:28:06.757" level="INFO">${process} = &lt;Popen: returncode: None args: ['cat', '/var/log/system.log']&gt;</msg>
<status status="PASS" starttime="20231123 05:28:06.753" endtime="20231123 05:28:06.757"/>
</kw>
<kw name="Wait For Process" library="Process">
<arg>cat</arg>
<arg>0.1s</arg>
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<msg timestamp="20231123 05:28:06.757" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20231123 05:28:06.863" level="INFO">Process did not complete in 100 milliseconds.</msg>
<msg timestamp="20231123 05:28:06.863" level="INFO">Leaving process intact.</msg>
<status status="PASS" starttime="20231123 05:28:06.757" endtime="20231123 05:28:06.863"/>
</kw>
<kw name="Terminate Process" library="Process">
<arg>cat</arg>
<arg>kill=True</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<msg timestamp="20231123 05:28:06.864" level="INFO">Forcefully killing process.</msg>
<msg timestamp="20231123 05:28:06.966" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20231123 05:28:06.863" endtime="20231123 05:28:06.966"/>
</kw>
<kw name="Get Process Result" library="Process">
<var>${result_proc}</var>
<doc>Returns the specified `result object` or some of its attributes.</doc>
<msg timestamp="20231123 05:28:06.967" level="INFO">${result_proc} = &lt;result object with rc -9&gt;</msg>
<status status="PASS" starttime="20231123 05:28:06.966" endtime="20231123 05:28:06.967"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${result_proc.rc}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20231123 05:28:06.967" endtime="20231123 05:28:06.968"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${result_proc.stdout}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20231123 05:28:06.968" endtime="20231123 05:28:06.973"/>
</kw>
<status status="PASS" starttime="20231123 05:28:06.706" endtime="20231123 05:28:06.973"/>
</test>
<status status="PASS" starttime="20231123 05:28:06.561" endtime="20231123 05:28:06.974"/>
</suite>
<statistics>
<total>
<stat pass="3" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="3" fail="0" skip="0" id="s1" name="Control 7">Control 7</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
